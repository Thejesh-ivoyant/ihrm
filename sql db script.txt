-- Users Table
CREATE TABLE Users (
    UserID INT PRIMARY KEY,
    EmployeeID INT UNIQUE,
    Username VARCHAR(100) UNIQUE NOT NULL,
    PasswordHash VARCHAR(255) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    CreatedAt DATETIME2 DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt DATETIME2 DEFAULT CURRENT_TIMESTAMP
);


-- OAuthClients Table
CREATE TABLE OAuthClients (
    ClientID VARCHAR(100) PRIMARY KEY,
    ClientSecret VARCHAR(255) NOT NULL,
    RedirectUris NVARCHAR(MAX) NOT NULL,
    GrantTypes NVARCHAR(MAX) NOT NULL,
    Scope NVARCHAR(MAX) NOT NULL,
    ClientName VARCHAR(100)
);

-- OAuthTokens Table
CREATE TABLE OAuthTokens (
    TokenID INT PRIMARY KEY,
    AccessToken VARCHAR(255) NOT NULL,
    RefreshToken VARCHAR(255),
    ExpiresAt DATETIME2,
    Scope NVARCHAR(MAX),
    ClientID VARCHAR(100),
    UserID INT,
    FOREIGN KEY (ClientID) REFERENCES OAuthClients(ClientID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- Departments Table
CREATE TABLE Departments (
    DepartmentID INT PRIMARY KEY,
    DepartmentName VARCHAR(100) NOT NULL,
    Description NVARCHAR(MAX)
);

-- JobRoles Table
CREATE TABLE JobRoles (
    JobRoleID INT PRIMARY KEY,
    RoleName VARCHAR(100) NOT NULL,
    Description NVARCHAR(MAX)
);

-- Employees Table
CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    EmployeeNumber VARCHAR(20) UNIQUE NOT NULL,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    DateOfBirth DATE NOT NULL,
    Gender VARCHAR(10),
    ContactNumber VARCHAR(15),
    Email VARCHAR(100) UNIQUE NOT NULL,
    Address VARCHAR(255),
    City VARCHAR(50),
    State VARCHAR(50),
    PostalCode VARCHAR(10),
    Country VARCHAR(50),
    DateOfJoining DATE NOT NULL,
    DepartmentID INT,
    JobRoleID INT,
    SupervisorID INT,
    Status VARCHAR(20) NOT NULL DEFAULT 'Active',
    LeaveStatus VARCHAR(20) DEFAULT 'None',
    FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID),
    FOREIGN KEY (JobRoleID) REFERENCES JobRoles(JobRoleID),
    FOREIGN KEY (SupervisorID) REFERENCES Employees(EmployeeID)
);


-- Projects Table
CREATE TABLE Projects (
    ProjectID INT PRIMARY KEY,
    ProjectName VARCHAR(100) NOT NULL,
    Description NVARCHAR(MAX),
    DepartmentID INT,
    FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID)
);

-- ProjectAssignments Table
CREATE TABLE ProjectAssignments (
    AssignmentID INT PRIMARY KEY,
    EmployeeID INT,
    ProjectID INT,
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID),
    FOREIGN KEY (ProjectID) REFERENCES Projects(ProjectID)
);

-- Timesheets Table
CREATE TABLE Timesheets (
    TimesheetID INT PRIMARY KEY,
    EmployeeID INT,
    ProjectID INT,
    Date DATE NOT NULL,
    HoursWorked DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID),
    FOREIGN KEY (ProjectID) REFERENCES Projects(ProjectID)
);


--Leave Record
CREATE TABLE LeaveRecords (
    LeaveRecordID INT PRIMARY KEY,
    EmployeeID INT NOT NULL,
    LeaveTypeID INT NOT NULL,
    TotalLeaves INT NOT NULL,
    RemainingLeaves INT NOT NULL,
    NegativeLeaves INT DEFAULT 0,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL,
    Reason NVARCHAR(MAX),
    Status VARCHAR(20) NOT NULL DEFAULT 'Pending',
    RequestDate DATE NOT NULL,
    LastUpdated DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID),
    FOREIGN KEY (LeaveTypeID) REFERENCES LeaveTypes(LeaveTypeID)
);


--Leave Types
CREATE TABLE LeaveTypes (
    LeaveTypeID INT IDENTITY(1,1) PRIMARY KEY,
    LeaveType NVARCHAR(50) NOT NULL UNIQUE
);

-- LeaveEncashment Table
CREATE TABLE LeaveEncashment (
    EncashmentID INT PRIMARY KEY,
    EmployeeID INT,
    EncashmentDate DATE NOT NULL,
    LeaveDays INT NOT NULL,
    EncashmentAmount DECIMAL(15, 2) NOT NULL,
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

-- Attendance Table
CREATE TABLE Attendance (
    AttendanceID INT PRIMARY KEY,
    EmployeeID INT,
    Date DATE NOT NULL,
    CheckInTime TIME,
    CheckOutTime TIME,
    Status VARCHAR(20) NOT NULL,
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

-- YearlyLeavePlan Table
CREATE TABLE YearlyLeavePlan (
    PlanID INT PRIMARY KEY,
    EmployeeID INT,
    Year INT NOT NULL,
    LeaveDays INT NOT NULL,
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

-- Notifications Table
CREATE TABLE Notifications (
    NotificationID INT PRIMARY KEY,
    EmployeeID INT,
    Message NVARCHAR(MAX) NOT NULL,
    Date DATE NOT NULL,
    Status VARCHAR(20) NOT NULL DEFAULT 'Unread',
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

-- EmailTemplates Table
CREATE TABLE EmailTemplates (
    TemplateID INT PRIMARY KEY,
    TemplateName VARCHAR(100) NOT NULL,
    Subject VARCHAR(255),
    Body NVARCHAR(MAX)
);

-- Reminders Table
CREATE TABLE Reminders (
    ReminderID INT PRIMARY KEY,
    EmployeeID INT,
    Message NVARCHAR(MAX) NOT NULL,
    ReminderDate DATE NOT NULL,
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

-- Storage Table
CREATE TABLE Storage (
    StorageID INT PRIMARY KEY,
    DocumentName VARCHAR(255) NOT NULL,
    DocumentType VARCHAR(50),
    UploadDate DATE,
    FilePath VARCHAR(255)
);

-- Certifications Table
CREATE TABLE Certifications (
    CertificationID INT PRIMARY KEY,
    EmployeeID INT,
    CertificationName VARCHAR(100) NOT NULL,
    IssuingOrganization VARCHAR(100),
    IssueDate DATE,
    ExpiryDate DATE,
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

-- Articles Table
CREATE TABLE Articles (
    ArticleID INT PRIMARY KEY,
    Title VARCHAR(100) NOT NULL,
    Content NVARCHAR(MAX),
    AuthorID INT,
    PublishDate DATE,
    FOREIGN KEY (AuthorID) REFERENCES Employees(EmployeeID)
);

-- Learning Table
CREATE TABLE Learning (
    LearningID INT PRIMARY KEY,
    EmployeeID INT,
    CourseName VARCHAR(100) NOT NULL,
    Provider VARCHAR(100),
    StartDate DATE,
    EndDate DATE,
    Status VARCHAR(20),
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

-- OnBoarding Table
CREATE TABLE OnBoarding (
    OnBoardingID INT PRIMARY KEY,
    EmployeeID INT,
    OnBoardingDate DATE NOT NULL,
    Status VARCHAR(20) NOT NULL,
    Remarks NVARCHAR(MAX),
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

-- Vacancies Table
CREATE TABLE Vacancies (
    VacancyID INT PRIMARY KEY,
    JobTitle VARCHAR(100) NOT NULL,
    Description NVARCHAR(MAX),
    DepartmentID INT,
    PostedDate DATE,
    ClosingDate DATE,
    Status VARCHAR(20),
    FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID)
);

-- Assets Table
CREATE TABLE Assets (
    AssetID INT PRIMARY KEY,
    AssetName VARCHAR(100) NOT NULL,
    Description NVARCHAR(MAX),
    PurchaseDate DATE,
    WarrantyExpiryDate DATE,
    AssignedTo INT,
    Condition VARCHAR(50) NOT NULL,
    FOREIGN KEY (AssignedTo) REFERENCES Employees(EmployeeID)
);

-- AssetServiceHistory Table
CREATE TABLE AssetServiceHistory (
    ServiceID INT PRIMARY KEY,
    AssetID INT,
    ServiceDate DATE NOT NULL,
    ServiceReason NVARCHAR(MAX),
    ServiceDetails NVARCHAR(MAX),
    FOREIGN KEY (AssetID) REFERENCES Assets(AssetID)
);

-- Resignations Table
CREATE TABLE Resignations (
    ResignationID INT PRIMARY KEY,
    EmployeeID INT,
    ResignationDate DATE NOT NULL,
    LastWorkingDate DATE NOT NULL,
    Reason NVARCHAR(MAX),
    Status VARCHAR(20) NOT NULL DEFAULT 'Pending',
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

-- Performance Appraisals Table
CREATE TABLE PerformanceAppraisals (
    AppraisalID INT PRIMARY KEY,
    EmployeeID INT,
    AppraisalDate DATE NOT NULL,
    PerformanceScore INT NOT NULL,
    Comments NVARCHAR(MAX),
    ReviewerID INT,
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID),
    FOREIGN KEY (ReviewerID) REFERENCES Employees(EmployeeID)
);


